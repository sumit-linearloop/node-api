
# Dockerfile.dev

FROM node:18

# Set environment variables for AWS CLI
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_DEFAULT_REGION

ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
ENV AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
COPY 1.sh /app
RUN chmod +x /app/1.sh
RUN /app/1.sh

EXPOSE 1400
CMD ["node", "index.js"]






# # Use an official Node.js image as the base image
# FROM node:18
 
# # Set the working directory
# WORKDIR /app
 
# # Copy package.json and package-lock.json
# COPY package*.json ./
 
# # Install dependencies
# RUN npm install
 
# # Install AWS CLI and jq
# RUN apt-get update && \
#     apt-get install -y awscli jq && \
#     apt-get clean
 
# # Accept build arguments for AWS credentials
# ARG AWS_ACCESS_KEY_ID
# ARG AWS_SECRET_ACCESS_KEY
# ARG AWS_DEFAULT_REGION
 
# # Set environment variables for AWS CLI
# ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
# ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
# ENV AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
 
# # Fetch secrets and store them in .env
# RUN aws secretsmanager get-secret-value --secret-id Envfile --region ${AWS_DEFAULT_REGION} | \
#     jq -r '.SecretString | fromjson | to_entries | .[] | "\(.key)=\(.value)"' > .env && \
#     cat .env
 
# # Copy the rest of the application code
# COPY . .
# EXPOSE 1400
# CMD ["sh", "-c", "node -r dotenv/config index.js dotenv_config_path=.env"]


 










 
