# name: Build and Push Docker Image

# on:
#   push:
#     branches:
#       - main

# env:
#   DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ env.DOCKER_USERNAME }}
#           password: ${{ env.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build Docker image
#         run: docker build -t node-api:latest .

#       - name: Tag Docker image
#         run: docker tag node-api:latest ${{ env.DOCKER_USERNAME }}/node-api:latest

#       - name: Push Docker image
#         run: docker push ${{ env.DOCKER_USERNAME }}/node-api:latest

#       - name: Tag Docker image with build number
#         run: |
#           BUILD_NUMBER=$(date +%s)
#           docker tag node-api:latest ${{ env.DOCKER_USERNAME }}/node-api:${BUILD_NUMBER}
#           docker push ${{ env.DOCKER_USERNAME }}/node-api:${BUILD_NUMBER}



# name: Build and Push Docker Image

# on:
#   push:
#     branches:
#       - main

# env:
#   DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ env.DOCKER_USERNAME }}
#           password: ${{ env.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build Docker image
#         run: docker build -t node-api:latest .

#       - name: Tag Docker image
#         run: docker tag node-api:latest ${{ env.DOCKER_USERNAME }}/node-api:latest

#       - name: Push Docker image
#         run: docker push ${{ env.DOCKER_USERNAME }}/node-api:latest

#       - name: Tag Docker image with build number
#         id: build_number
#         run: |
#           if [ ! -f build_number.txt ]; then
#             echo "0" > build_number.txt
#           fi
#           BUILD_NUMBER=$(cat build_number.txt)
#           BUILD_NUMBER=$((BUILD_NUMBER + 1))
#           echo "$BUILD_NUMBER" > build_number.txt
#           echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
#           docker tag node-api:latest ${{ env.DOCKER_USERNAME }}/node-api:${BUILD_NUMBER}
#           docker push ${{ env.DOCKER_USERNAME }}/node-api:${BUILD_NUMBER}


name: Build, Push Docker Image and Deploy to Kubernetes

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: docker build -t devops-api:latest .

      - name: Tag Docker Image
        run: |
          BUILD_NUMBER=$(date +%s)
          docker tag devops-api:latest ${{ env.DOCKER_USERNAME }}/devops-api:latest
          docker tag devops-api:latest ${{ env.DOCKER_USERNAME }}/devops-api:${BUILD_NUMBER}

      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/devops-api:latest
          docker push ${{ env.DOCKER_USERNAME }}/devops-api:${BUILD_NUMBER}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubeconfig
        uses: azure/setup-kubectl@v1
        with:
          kubectl-version: 'latest'
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f node-api.yaml
