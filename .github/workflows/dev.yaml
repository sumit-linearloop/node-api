# # name: dev branch deployment

# # on:
# #   push:
# #     branches:
# #       - dev

# # env:
# #   DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
# #   DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
# #   BUILD_NUMBER: ${{ github.run_number }}

# # jobs:
# #   build-and-push:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Login to Docker Hub
# #         uses: docker/login-action@v1
# #         with:
# #           username: ${{ env.DOCKER_USERNAME }}
# #           password: ${{ env.DOCKER_PASSWORD }}

# #       - name: Set up Docker Buildx
# #         uses: docker/setup-buildx-action@v1

# #       - name: Build Docker image
# #         run: |
# #           docker build --no-cache -t dev-api:latest -f Dockerfile.dev .

# #       - name: Tag Docker image with Docker Hub username
# #         run: |
# #           docker tag dev-api:latest ${{ env.DOCKER_USERNAME }}/dev-api:latest

# #       - name: Push Docker image with 'latest' tag
# #         run: |
# #           docker push ${{ env.DOCKER_USERNAME }}/dev-api:latest

# #       - name: Tag Docker image with build number
# #         run: |
# #           docker tag dev-api:latest ${{ env.DOCKER_USERNAME }}/dev-api:${{ env.BUILD_NUMBER }}
# #           docker push ${{ env.DOCKER_USERNAME }}/dev-api:${{ env.BUILD_NUMBER }}


# #   deploy:
# #     runs-on: ubuntu-latest
# #     needs: build-and-push
# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Set up AWS CLI
# #         uses: aws-actions/configure-aws-credentials@v2
# #         with:
# #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
# #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# #           aws-region: us-east-1

# #       - name: Install kubectl
# #         run: |
# #           curl -LO "https://dl.k8s.io/release/v1.30.3/bin/linux/amd64/kubectl"
# #           chmod +x ./kubectl
# #           sudo mv ./kubectl /usr/local/bin/kubectl
# #           kubectl version --client
      
# #       - name: Update kube config
# #         run: |
# #           mkdir -p $HOME/.kube
# #           export KUBECONFIG=$HOME/.kube/config
# #           aws eks update-kubeconfig --region us-east-1 --name ci-cd-pipeline

# #       - name: Deploy to Kubernetes
# #         run: |
# #           kubectl apply -f dev.yaml

# name: dev branch deployment

# on:
#   push:
#     branches:
#       - dev

# env:
#   DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
#   BUILD_NUMBER: ${{ github.run_number }}

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ env.DOCKER_USERNAME }}
#           password: ${{ env.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build Docker image
#         run: |
#           docker build --no-cache -f Dockerfile.dev -t dev-api:latest .

#       - name: Tag Docker image with Docker Hub username
#         run: |
#           docker tag dev-api:latest ${{ env.DOCKER_USERNAME }}/dev-api:latest

#       - name: Push Docker image with 'latest' tag
#         run: |
#           docker push ${{ env.DOCKER_USERNAME }}/dev-api:latest

#       - name: Tag Docker image with build number
#         run: |
#           docker tag dev-api:latest ${{ env.DOCKER_USERNAME }}/dev-api:${{ env.BUILD_NUMBER }}
#           docker push ${{ env.DOCKER_USERNAME }}/dev-api:${{ env.BUILD_NUMBER }}

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build-and-push

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up AWS CLI
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Install kubectl
#         run: |
#           curl -LO "https://dl.k8s.io/release/v1.30.3/bin/linux/amd64/kubectl"
#           chmod +x ./kubectl
#           sudo mv ./kubectl /usr/local/bin/kubectl
#           kubectl version --client
      
#       - name: Update kube config
#         run: |
#           mkdir -p $HOME/.kube
#           export KUBECONFIG=$HOME/.kube/config
#           aws eks update-kubeconfig --region us-east-1 --name ci-cd-pipeline

#       - name: Deploy to Kubernetes
#         run: |
#           ls -la
#           kubectl apply -f dev-api.yaml
#           kubectl rollout restart deployment/sumit-dev-deployment
#           kubectl rollout status deployment/sumit-dev-deployment






# name: dev branch deployment

# on:
#   push:
#     branches:
#       - sumit

# env:
#   DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
#   BUILD_NUMBER: ${{ github.run_number }}
#   SECRET_NAME: Envfile # Replace with your actual secret name

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ env.DOCKER_USERNAME }}
#           password: ${{ env.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build Docker image
#         run: |
#           docker build --no-cache -f Dockerfile.dev -t dev-api:latest .

#       - name: Tag Docker image with Docker Hub username
#         run: |
#           docker tag dev-api:latest ${{ env.DOCKER_USERNAME }}/dev-api:latest

#       - name: Push Docker image with 'latest' tag
#         run: |
#           docker push ${{ env.DOCKER_USERNAME }}/dev-api:latest

#       - name: Tag Docker image with build number
#         run: |
#           docker tag dev-api:latest ${{ env.DOCKER_USERNAME }}/dev-api:${{ env.BUILD_NUMBER }}
#           docker push ${{ env.DOCKER_USERNAME }}/dev-api:${{ env.BUILD_NUMBER }}

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build-and-push
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
 
#       - name: Set up AWS CLI
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1
 
#       - name: Retrieve secrets from AWS Secrets Manager
#         run: |
#           SECRET=$(aws secretsmanager get-secret-value --secret-id ${{ env.SECRET_NAME }} --query SecretString --output text)
#           echo $SECRET > .env
#         env:
#           AWS_REGION: ${{ env.AWS_REGION }}
 
#       - name: Install kubectl
#         run: |
#           curl -LO "https://dl.k8s.io/release/v1.30.3/bin/linux/amd64/kubectl"
#           chmod +x ./kubectl
#           sudo mv ./kubectl /usr/local/bin/kubectl
#           kubectl version --client
 
#       - name: Update kube config
#         run: |
#           mkdir -p $HOME/.kube
#           export KUBECONFIG=$HOME/.kube/config
#           aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ci-cd-pipeline
 
#       - name: Deploy to Kubernetes
#         run: |
#           kubectl rollout restart deployment/sumit-dev-deployment
#           kubectl rollout status deployment/sumit-dev-deployment
#           kubectl apply -f secret.yaml
#           kubectl apply -f dev-api.yaml


name: Dev Branch - Build, Push Docker Image, and Deploy
 
on:
  push:
    branches:
      - sumit
 
env:
  AWS_REGION: us-east-1
  SECRET_NAME: Envfile  # Replace with your actual secret name in AWS Secrets Manager
 
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
 
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build --no-cache -f Dockerfile.dev -t dev-api:latest .

      - name: Tag Docker image with Docker Hub username
        run: |
          docker tag dev-api:latest ${{ env.DOCKER_USERNAME }}/dev-api:latest

      - name: Push Docker image
        run: docker push ${{ env.DOCKER_USERNAME }}/dev-api:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
 
  #     - name: Set up AWS CLI
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.AWS_REGION }}
 
  #     - name: Install jq
  #       run: sudo apt-get install -y jq
 
  #     - name: Install kubectl
  #       run: |
  #         curl -LO "https://dl.k8s.io/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
  #         chmod +x ./kubectl
  #         sudo mv ./kubectl /usr/local/bin/kubectl
  #         kubectl version --client
 
  #     - name: Update kubeconfig
  #       run: |
  #         mkdir -p $HOME/.kube
  #         export KUBECONFIG=$HOME/.kube/config
  #         aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ci-cd-pipeline
 
  #     - name: Retrieve secrets from AWS Secrets Manager
  #       id: get-secrets
  #       run: |
  #         SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id ${{ env.SECRET_NAME }} --query SecretString --output text)
  #         echo $SECRET_JSON > secrets.json
  #         # Parsing JSON and setting environment variables
  #         echo $(jq -r 'to_entries[] | "\(.key)=\(.value)"' secrets.json) | tee -a .env
 
  #     - name: Replace placeholders in deployment file
  #       run: |
  #         IMAGE_TAG=${{ github.sha }}
  #         sed -i.bak "s|jack2153/node-api-dev:dev|${{ secrets.DOCKERHUB_USERNAME }}/node-api-dev:$IMAGE_TAG|g" dev-deployment.yaml
 
  #         while IFS= read -r line; do
  #           VAR_NAME=$(echo $line | cut -d= -f1)
  #           VAR_VALUE=$(echo $line | cut -d= -f2-)
  #           sed -i.bak "s|{{$VAR_NAME}}|$VAR_VALUE|g" dev-deployment.yaml
  #         done < .env
 
  #     - name: Apply Kubernetes manifests
  #       run: |
  #         kubectl rollout restart deployment node-api-dev-deployment
  #         kubectl apply -f dev-deployment.yaml